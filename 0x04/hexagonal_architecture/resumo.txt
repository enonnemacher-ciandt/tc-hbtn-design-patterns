A Arquitetura Hexagonal foi proposta por Alistair Cockbur, ela consiste basicamente em dividir as classes do sistema em dois grupos principais, sendo o primeiro composto pelas classes de domínio, ou seja, aquelas que tem ligação direta com a aplicação, e o outro grupo formado por classes que contém a infraestrutura e também tecnologias responsáveis por integrar a aplicação com sistemas como por exemplo o banco de dados. A comunicação entre as classes desses grupos é feita por classes chamadas adaptadores, os quais recebem chamadas vindas tanto de dentro para fora do sistema, quanto de fora para dentro, e então as encaminham para uma porta adequada. Nesta arquitetura existem dois tipos de portas, portas de entrada, que são interfaces usadas para comunicação de fora para dentro, e as de saída, que fazem a comunicação de dentro para fora.
Alguns dos pontos fortes da arquitetura hexagonal é favorecer a reusabilidade de código, alta coesão, baixo acoplamento, torna a aplicação fácil de testar, a troca de tecnologias é feita mais facilmente. A Clean Architecture possui semelhança com a Arquitetura Hexagonal, porém segue mais o padrão da Onion Architecture, tendo a divisão entre camadas, mantendo o isolamento e inversão de dependência. 
A implementação da Arquitetura Hexagonal exige um grande esforço da equipe, portanto deve ser levado em consideração sua complexidade na hora de decidir por usar ou não este conceito, pois em sistemas menores onde não haverá tanta manutenção, o seu uso pode não ser interessante.
